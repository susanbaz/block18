import { Node, LocationInfo, NodeMap } from './node';
import { Anonymous } from './anonymous';
import type { Context } from '../context';
import type { OutputCollector } from '../output';
export declare type DeclarationValue = NodeMap & {
    name: Node | string;
    value: any;
};
/**
 * A continuous collection of nodes
 */
export declare class Declaration extends Node {
    name: Node;
    value: any;
    important: Anonymous;
    constructor(value: DeclarationValue, location?: LocationInfo);
    eval(context: Context): this;
    toCSS(context: Context, out: OutputCollector): void;
    toModule(context: Context, out: OutputCollector): void;
}
export declare const decl: (value: DeclarationValue, location?: LocationInfo) => Declaration;
