import { Node, NodeMap, LocationInfo } from './node';
import { Ruleset } from './ruleset';
import { Nil } from './nil';
import type { Context } from '../context';
import { OutputCollector } from '../output';
declare type RuleValue = NodeMap & {
    sels: Node;
    value: Ruleset | Node[];
};
/**
 * A qualified rule
 * @example
 * .box {
 *   color: black;
 * }
 */
export declare class Rule extends Node {
    sels: Node;
    value: Ruleset;
    constructor(value: RuleValue, location?: LocationInfo);
    eval(context: Context): Nil | this;
    toCSS(context: Context, out: OutputCollector): void;
    toModule(context: Context, out: OutputCollector): void;
}
export declare const rule: (value: RuleValue, location?: LocationInfo) => Rule;
export {};
