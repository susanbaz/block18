"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.spaced = exports.Spaced = void 0;
const node_1 = require("./node");
const expression_1 = require("./expression");
const ws_1 = require("./ws");
/**
 * A space-separated expression.
 * This is basically API sugar for expressions
 */
class Spaced extends expression_1.Expression {
    constructor(value, location) {
        if (node_1.isNodeMap(value)) {
            super(value, location);
            return;
        }
        const values = [value[0]];
        for (let i = 1; i < value.length; i++) {
            values.push(new ws_1.WS(), value[i]);
        }
        super(values, location);
    }
    toModule(context, out) {
        const loc = this.location;
        out.add(`$J.spaced([`, loc);
        const length = this.value.length - 1;
        this.value.forEach((n, i) => {
            if (i % 2 === 0) {
                n.toModule(context, out);
                if (i < length) {
                    out.add(', ', loc);
                }
            }
        });
        out.add(`])`);
    }
}
exports.Spaced = Spaced;
Spaced.prototype.type = 'Spaced';
const spaced = (...args) => new Spaced(...args);
exports.spaced = spaced;
