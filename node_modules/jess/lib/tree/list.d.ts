import { NodeMap, LocationInfo, Primitive, Node } from './node';
import type { Context } from '../context';
import { OutputCollector } from '../output';
/**
 * A list of expressions
 *
 * i.e. one, two, three
 * or .sel, #id.class, [attr]
 */
export declare class List<T extends Primitive = Primitive> extends Node {
    value: T[];
    toArray(): T[];
    toCSS(context: Context, out: OutputCollector): void;
    toModule(context: Context, out: OutputCollector): OutputCollector;
}
export declare const list: (value: Primitive[] | NodeMap, location?: LocationInfo) => List<Primitive>;
