"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
require("mocha");
const __1 = require("..");
const context_1 = require("../../context");
const output_1 = require("../../output");
let context;
let out;
describe('Element', () => {
    beforeEach(() => {
        context = new context_1.Context;
        out = new output_1.OutputCollector;
    });
    it('should identify a class', () => {
        const rule = __1.el('.foo');
        chai_1.expect(rule.isClass).to.eq(true);
    });
    it('should identify an id', () => {
        const rule = __1.el('#id');
        chai_1.expect(rule.isId).to.eq(true);
    });
    it('should identify a pseudo-class', () => {
        const rule = __1.el(':foo');
        chai_1.expect(rule.isPseudo).to.eq(true);
    });
    it('should identify an attribute', () => {
        const rule = __1.el('[foo]');
        chai_1.expect(rule.isAttr).to.eq(true);
    });
    it('should identify an ident', () => {
        const rule = __1.el('foo');
        chai_1.expect(rule.isIdent).to.eq(true);
    });
    it('should serialize a module', () => {
        let rule = __1.el('foo');
        rule.toModule(context, out);
        chai_1.expect(out.toString()).to.eq('$J.el($J.anon("foo"))');
        rule = __1.el(__1.js('colorBrand'));
        out = new output_1.OutputCollector;
        rule.toModule(context, out);
        chai_1.expect(out.toString()).to.eq('$J.el(colorBrand)');
    });
});
