"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.custom = exports.CustomDeclaration = void 0;
const declaration_1 = require("./declaration");
/**
 * A declaration that retains all tokens
 * (white-space, comments, etc)
 *
 * Ideally, perhaps, the value would just be
 * one Anonymous node for now
 */
class CustomDeclaration extends declaration_1.Declaration {
    eval(context) {
        context.inCustom = true;
        const node = super.eval(context);
        context.inCustom = false;
        return node;
    }
    toCSS(context, out) {
        const loc = this.location;
        this.name.toCSS(context, out);
        /**
         * Don't insert a space after the colon;
         * Instead, insert the exact token stream.
         *
         * @todo - test this
         */
        out.add(':', loc);
        this.value.toCSS(context, out);
        out.add(';', loc);
    }
    toModule(context, out) {
        let pre = context.pre;
        const loc = this.location;
        out.add(`$J.custom({\n`, loc);
        out.add(`  ${pre}name: `);
        this.name.toModule(context, out);
        out.add(`\n  ${pre}value: `);
        this.value.toModule(context, out);
        out.add(`\n${pre}})`);
    }
}
exports.CustomDeclaration = CustomDeclaration;
CustomDeclaration.prototype.type = 'CustomDeclaration';
const custom = (value, location) => new CustomDeclaration(value, location);
exports.custom = custom;
