import { Node, LocationInfo, NodeMap } from './node';
import { Nil } from './nil';
import type { Context } from '../context';
import type { OutputCollector } from '../output';
/**
 * The '&' selector element
 */
export declare class Ampersand extends Node {
    value: string;
    constructor(value?: string | NodeMap, location?: LocationInfo);
    /** Return the parent selector from context */
    eval(context: Context): Node | Nil;
    toModule(context: Context, out: OutputCollector): void;
}
export declare const amp: (value?: string | NodeMap, location?: LocationInfo) => Ampersand;
