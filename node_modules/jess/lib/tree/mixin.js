"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mixin = exports.Mixin = void 0;
const js_node_1 = require("./js-node");
const js_ident_1 = require("./js-ident");
/**
 * @mixin someMixin (arg1, arg2: 10px) {
 *   color: black;
 *   background-color: white;
 *   border-radius: $arg2;
 * }
 */
class Mixin extends js_node_1.JsNode {
    /**
     * @todo -
     * Return either a ruleset if `this` is the eval context,
     * or return ruleset.obj() if not (for React/Vue)
     */
    toModule(context, out) {
        const { name, args, value } = this;
        const nm = name.value;
        if (context.depth === 0) {
            out.add(`export let ${nm}`, this.location);
            context.exports.add(nm);
        }
        else {
            if (context.depth !== 1) {
                out.add(`let `);
            }
            out.add(`${nm} = function(`);
            if (args) {
                const length = args.value.length - 1;
                args.value.forEach((node, i) => {
                    if (node instanceof js_ident_1.JsIdent) {
                        out.add(node.value);
                    }
                    else {
                        out.add(node.name.value);
                        out.add(' = ');
                        node.value.toModule(context, out);
                    }
                    if (i < length) {
                        out.add(', ');
                    }
                });
            }
            out.add(') { return ');
            value.toModule(context, out);
            out.add('}');
        }
    }
}
exports.Mixin = Mixin;
Mixin.prototype.type = 'Mixin';
const mixin = (value, location) => new Mixin(value, location);
exports.mixin = mixin;
