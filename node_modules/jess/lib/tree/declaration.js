"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decl = exports.Declaration = void 0;
const node_1 = require("./node");
const anonymous_1 = require("./anonymous");
/**
 * A continuous collection of nodes
 */
class Declaration extends node_1.Node {
    constructor(value, location) {
        const name = value.name;
        if (name.constructor === String) {
            value.name = new anonymous_1.Anonymous(name);
        }
        super(value, location);
    }
    eval(context) {
        const node = this.clone();
        node.name = this.name.eval(context);
        node.value = context.cast(this.value).eval(context);
        if (node.important) {
            node.important = new anonymous_1.Anonymous(this.important.value);
        }
        return node;
    }
    toCSS(context, out) {
        this.name.toCSS(context, out);
        out.add(': ');
        context.cast(this.value).toCSS(context, out);
        if (this.important) {
            out.add(' ');
            this.important.toCSS(context, out);
        }
        out.add(';');
    }
    toModule(context, out) {
        let pre = context.pre;
        const loc = this.location;
        out.add(`$J.decl({\n`, loc);
        context.indent++;
        out.add(`  ${pre}name: `);
        this.name.toModule(context, out);
        out.add(`,\n  ${pre}value: `);
        this.value.toModule(context, out);
        if (this.important) {
            out.add(`,\n  ${pre}important: `);
            this.important.toModule(context, out);
        }
        context.indent--;
        out.add(`\n${pre}})`);
    }
}
exports.Declaration = Declaration;
Declaration.prototype.allowRuleRoot = true;
Declaration.prototype.type = 'Declaration';
const decl = (value, location) => new Declaration(value, location);
exports.decl = decl;
