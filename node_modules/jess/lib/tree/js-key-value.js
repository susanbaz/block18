"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.keyval = exports.JsKeyValue = void 0;
const js_node_1 = require("./js-node");
const js_ident_1 = require("./js-ident");
const js_collection_1 = require("./js-collection");
/**
 * Either the left-hand side of a @let assignment,
 * or the key (prop) in a collection.
 *
 * @todo - technically we don't need to limit
 * reserved words in object properties, just
 * initial @let identifiers
 */
class JsKeyValue extends js_node_1.JsNode {
    constructor(val, location) {
        let { name, value } = val;
        if (name.constructor === String) {
            name = new js_ident_1.JsIdent(name);
        }
        super({ name, value }, location);
    }
    toCSS(context, out) {
        const value = this.value;
        out.add(this.name.value, this.location);
        if (!(value instanceof js_collection_1.JsCollection)) {
            out.add(':');
        }
        out.add(' ');
        value.toCSS(context, out);
        if (!(value instanceof js_collection_1.JsCollection)) {
            out.add(';');
        }
    }
    toModule(context, out) {
        out.add(`${this.name.value}: `, this.location);
        this.value.toModule(context, out);
    }
}
exports.JsKeyValue = JsKeyValue;
JsKeyValue.prototype.type = 'JsKeyValue';
const keyval = (value, location) => new JsKeyValue(value, location);
exports.keyval = keyval;
