import { Expression } from './expression';
import type { Context } from '../context';
import { Node, LocationInfo } from './node';
import { OutputCollector } from '../output';
export declare class Element extends Node {
    value: any;
    constructor(value: any, location?: LocationInfo);
    /** Very simple string matching */
    get isAttr(): boolean;
    get isClass(): boolean;
    get isId(): boolean;
    get isPseudo(): boolean;
    get isIdent(): boolean;
    eval(context: Context): this | (Node & Expression);
    toCSS(context: Context, out: OutputCollector): void;
    toModule(context: Context, out: OutputCollector): void;
}
export declare const el: (value: any, location?: LocationInfo) => Element;
