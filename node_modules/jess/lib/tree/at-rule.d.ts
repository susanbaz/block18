import { Node, LocationInfo } from './node';
import type { Ruleset } from './ruleset';
import type { Context } from '../context';
import type { OutputCollector } from '../output';
export declare type AtRuleValue = {
    name: string;
    /** The prelude */
    value: Node;
    rules?: Ruleset;
};
/**
 * A rule like @charset or @media
 */
export declare class AtRule extends Node {
    name: string;
    value: Node;
    rules: Ruleset;
    eval(context: Context): AtRule;
    toCSS(context: Context, out: OutputCollector): void;
    toModule(context: Context, out: OutputCollector): void;
}
export declare const atrule: (value: AtRuleValue, location?: LocationInfo) => AtRule;
