"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const path = __importStar(require("path"));
// import * as fs from 'fs'
const render_module_1 = require("../render-module");
/**
 * Rollup plugin to transpile .jess at compile-time
 */
function default_1(options = {}) {
    return {
        name: 'jess',
        transform(code, id) {
            return __awaiter(this, void 0, void 0, function* () {
                if (!(/\.jess$/.test(id))) {
                    return null;
                }
                const result = yield render_module_1.renderModule(code, id, options);
                // For testing...
                // fs.writeFileSync(id.replace(/\.jess/, '__.js'), result.code)
                this.emitFile({
                    type: 'asset',
                    name: path.basename(id),
                    source: result.$js_runtime
                });
                return { code: result.$js };
            });
        }
    };
}
exports.default = default_1;
