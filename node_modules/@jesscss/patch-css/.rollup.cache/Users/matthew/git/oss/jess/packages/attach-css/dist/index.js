/** Detect that we're in a browser */
export var isBrowser = new Function('try { return this===window } catch(e) { return false }')();
var sheetLength;
var _searchStart = '#__jess_start';
var _searchEnd = '#__jess_end';
var sheetMap = new Map();
/**
 * Stringify the contents of all loaded stylesheets
 */
function collectStylesheets() {
    sheetLength = document.styleSheets.length;
    for (var i = 0; i < sheetLength; i++) {
        var sheet = document.styleSheets[i];
        if (sheetMap.has(sheet.ownerNode)) {
            continue;
        }
        try {
            var rules = sheet.cssRules;
            var numRules = rules.length;
            var ruleText = '';
            for (var j = 0; j < numRules; j++) {
                ruleText += rules[j].cssText;
            }
            sheetMap.set(sheet.ownerNode, ruleText);
        }
        catch (e) { }
    }
}
function attachLoad() {
    window.addEventListener('DOMContentLoaded', collectStylesheets);
}
export function init(_a) {
    var searchStart = _a.searchStart, searchEnd = _a.searchEnd;
    _searchStart = searchStart || _searchStart;
    _searchEnd = searchEnd || _searchEnd;
    if (isBrowser) {
        attachLoad();
    }
}
/**
 * Insert a stylesheet just after the node where styles are found.
 *
 * @todo
 * This is prime for lots of optimization. For Alpha, we just always
 * generate or replace a style block without diffing.
 */
export function updateSheet(styleContents, id) {
    var previousSheet;
    sheetMap.forEach(function (text, node) {
        if (previousSheet) {
            return;
        }
        if (node instanceof Element && node.id === id) {
            previousSheet = { node: node, text: text };
        }
    });
    var key = id;
    if (!previousSheet) {
        /** Update our map */
        collectStylesheets();
        key = null;
        var startText_1 = _searchStart + " { content: \"" + id + "\"; }";
        var endText_1 = _searchEnd + " { content: \"" + id + "\"; }";
        sheetMap.forEach(function (text, node) {
            if (key !== null) {
                return;
            }
            var start = text.indexOf(startText_1);
            if (start !== -1) {
                /** This should be the sheet */
                var end = text.indexOf(endText_1);
                if (end !== -1) {
                    previousSheet = { text: text, node: node };
                    key = 'true';
                }
            }
        });
    }
    var createStyleElement = function (text) {
        var style = document.createElement('style');
        style.setAttribute('media', 'all,jess');
        style.setAttribute('id', id);
        style.innerHTML = text;
        return style;
    };
    if (previousSheet) {
        /** Update existing sheet */
        if (key === id && previousSheet.node instanceof Element) {
            previousSheet.node.innerHTML = styleContents;
            collectStylesheets();
            return;
        }
        var next = previousSheet.node.nextElementSibling;
        var style_1 = createStyleElement(styleContents);
        if (next) {
            previousSheet.node.parentNode.insertBefore(style_1, next);
            return;
        }
    }
    var head = document.getElementById('head');
    var style = createStyleElement(styleContents);
    head.appendChild(style);
}
//# sourceMappingURL=index.js.map